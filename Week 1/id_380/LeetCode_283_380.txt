我的（挫）解法：
class Solution {
    public void moveZeroes(int[] nums) {
        
        int i = 0;
        List<Integer> arrayList = new ArrayList();
        if (nums.length > 0) {
            for (int eachNum : nums
            ) {
                if (eachNum != 0) {
                    arrayList.add(eachNum);
                } else {
                    i++;
                }
            }

            for (int k = 0; k < i; k++) {
                arrayList.add(0);
            }
        }
        
        for (int j = 0; j < arrayList.size(); j++
        ) {
            nums[j] = (int)arrayList.get(j);
        }
        
    }
}
执行用时 :2 ms, 在所有 java 提交中击败了28.65%的用户
内存消耗 :37.5 MB, 在所有 java 提交中击败了95.54%的用户

优秀解法：
class Solution {
    public void moveZeroes(int[] nums) {
        
        int indexInt = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                indexInt++;
            } else {
                nums[i - indexInt] = nums[i];
            }
        }
        for (int i = nums.length - indexInt; i < nums.length; i++) {
            nums[i] = 0;
        }
        
    }
}

执行用时 :0 ms, 在所有 java 提交中击败了100.00%的用户
内存消耗 :37.4 MB, 在所有 java 提交中击败了95.62%的用户